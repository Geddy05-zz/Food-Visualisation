foodData <- read.csv("FoodFacts.csv")
View(foodData)
View(foodData)
alergie <-foodData$allergens
unique(alergie)
foodData <- read.csv("FoodFacts.csv",encoding = "GBK")
alergie <-foodData$allergens
unique(alergie)
grepl('soya',foodData$allergens)
allergie <- foodData[grep("soya", foodData&allergens), ]
allergie <- foodData[grep("soya", foodData$allergens), ]
allergie
allergie <- foodData[grep("soya", foodData$allergens), ]
hist(c(1,2,3,4,5))
hist(c(2,3,4,5))
table(allergie, foodData)
table(allergie, foodData$product_name)
table(nrow(allergie), nrow(foodData$product_name))
nrow(allergie)
numberOfRows = c(nrow(allergie),nrow(foodData))
numberOfRows
nrow(al)
(nrow(allergie) / nrow(foodData)) * 100
shiny::runApp()
allergie <- foodData[grep("gluten", foodData$allergens), ]
> (nrow(allergie) / nrow(foodData)) * 100
(nrow(allergie) / nrow(foodData)) * 100
allergie <- foodData[grep("gluten", foodData$allergens,ignore.case=TRUE), ]
(nrow(allergie) / nrow(foodData)) * 100
allergie <- foodData[grep("nuts", foodData$allergens,ignore.case=TRUE), ]
(nrow(allergie) / nrow(foodData)) * 100
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(foodData)
drops <- c("product_name","brands","origins","countries","ingredients_text","allergens","traces","main_category","image_url")
foodData <- foodData[ ,(names(foodData) %in% drops)]
View(foodData)
View(foodData)
write.csv(foodDataCleaned)
write.csv(foodData)
write.csv(foodData,file = "foodData.csv")
runApp()
runApp()
runApp()
View(allergie)
View(allergie)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(foodData)
View(allergie)
View(allergie)
View(allergie)
View(allergie)
View(allergie)
View(allergie)
runApp()
runApp()
allergie <- foodData[grep(paste(c("nuts","gluten"), collapse = "|"), foodData$allergens,ignore.case=TRUE), ]
t <- table(allergie$countries)
t
t <- t[,t > 0]
t <- t[t > 0,]
str(t)
t <- t[,1 > 0]
t <- t[,1]
t[,1]
t[,0]
t[order(t)]
t[order(t,decreasing=TRUE)]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
allergie <- foodData[grep(paste(c("nuts","gluten"), collapse = "|"), foodData$allergens,ignore.case=TRUE), ]
View(allergie)
foodData <- read.csv("foodData.csv")
allergie <- foodData[grep(paste(c("nuts","gluten"), collapse = "|"), foodData$allergens,ignore.case=TRUE), ]
View(foodData)
foodData <- read.csv("foodData.csv")
foodData <- read.csv("foodData.csv")
foodData <- read.csv("foodData.csv")
foodData <- read.csv("foodData.csv")
foodData <- read.csv("foodData1.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("wordcloud")
install.packages("tm")
install.packages("SnowballC")
runApp()
runApp()
runApp()
dependencies = TRUE
install.packages("tm", dependencies = TRUE)
install.packages("SnowballC", dependencies = TRUE)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages("SnowballC", dependencies = TRUE)
install.packages("SnowballC", dependencies = TRUE)
defaults write org.R-project.R force.LANG en_US.UTF-8
shiny::runApp()
runApp()
words <- unlist(strsplit(as.character(foodData$allergens),','))
jeopCorpus <- Corpus(VectorSource(words))
dtm <- TermDocumentMatrix(jeopCorpus)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
d
View(d)
jeopCorpus
runApp()
words <- unlist(strsplit(as.character(foodData$allergens),','))
runApp()
table(words)
words <- unlist(strsplit(as.character(foodData$allergens),','))
foodData <- read.csv("foodData.csv")
words <- unlist(strsplit(as.character(foodData$allergens),','))
table(words)
words <- unlist(strsplit(as.character(foodData$allergens),','))
all <- foodData$allergens
words <- unlist(strsplit(as.character(all),','))
table(words)
words <- tolower(unlist(strsplit(as.character(all),',')))
table(words)
all <- foodData$allergens
words <- tolower(unlist(strsplit(as.character(all),',')))
table(words)
all <- foodData$allergens
words <- tolower(unlist(strsplit(as.character(all),',')))
all <- foodData$allergens
words <- tolower(unlist(strsplit(as.character(all),',')))
words <- tolower(unlist(strsplit(as.character(all),',')))
table(words)
foodData <- read.csv("foodData.csv")
all <- foodData$allergens
all <- foodData$allergens
words <- tolower(unlist(strsplit(as.character(all),',')))
table(words)
foodData <- read.csv("foodData.csv")
all <- foodData$allergens
words <- tolower(unlist(strsplit(as.character(all),',')))
table(words)
runApp()
runApp()
foodData <- read.csv("foodData.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
options(shiny.trace=TRUE)
runApp()
options(shiny.trace=FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
